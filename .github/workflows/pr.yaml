name: Pull Request Build

on:
  push:
    branches-ignore:
      - "master"

permissions:
  contents: write

jobs:
  pr-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - name: Build CLI
        run: |
          make
      - name: Publish Docs
        env:
          GITHUB_TOKEN: ${{secrets.GH_TOKEN}}
          APIS_USERNAME: ${{secrets.APIS_USERNAME}}
          APIS_EMAIL: ${{secrets.APIS_EMAIL}}
        run: |
          make
          if [[ $APIS_EMAIL != "" ]]
          then
          git config --global user.email "${APIS_EMAIL}"
          git config --global user.name "${APIS_USERNAME}"
          tag_name="${GITHUB_REF##*/}"
          LOCAL=0
          else
          tag_name="local_test"
          LOCAL=1
          fi
          
          rm -rf generated_docs docs
          mkdir generated_docs
          
          if [[ $LOCAL == 1 ]]
          then
          dstrm --generate-docs
          else
          ./dist/dstrm --generate-docs
          fi
          
          cd generated_docs
          find . -name "*strm_*" -exec sh -c 'mv "$1" "${1#*strm_}"' _ {} \;
          rm -rf dstrm.md
          for i in $(find . -name '*.md'); do
          DIRNAME_TO_PARSE="${i%_*}"
          FILENAME="${i##*_}"
          if [[ $DIRNAME_TO_PARSE != *md ]]
          then
          DIRNAME=$(echo "${DIRNAME_TO_PARSE%%.md}" | sed -r 's/_/\//g')
          mkdir -p "$DIRNAME"
          mv "$i" "$DIRNAME/$FILENAME"
          else
          mkdir -p "${FILENAME%.md}"
          mv "$FILENAME" "${FILENAME%.md}/index.md"
          rm -rf "${DIRNAME_TO_PARSE}"
          fi
          done
          
          cd ..
          
          if [[ $GITHUB_TOKEN == "" ]]
          then
          git clone git@github.com:strmprivacy/docs.git
          else
          git clone "https://git:${GITHUB_TOKEN}@github.com/strmprivacy/docs.git"
          fi
          cd docs
          git checkout -b $tag_name
          rm -rf ./docs/cli-reference/*
          cp -rf ../generated_docs/* ./docs/cli-reference
          git add .
          git commit -m "add generated docs (${tag_name})"
          git push -u origin $tag_name
      - name: Run CLI tests
        env:
          STRM_TEST_USER_BILLING_ID: ${{ secrets.STRM_TEST_USER_BILLING_ID }}
          STRM_TEST_USER_EMAIL: ${{ secrets.STRM_TEST_USER_EMAIL }}
          STRM_TEST_USER_PASSWORD: ${{ secrets.STRM_TEST_USER_PASSWORD }}
          STRM_TEST_S3_USER_NAME: ${{ secrets.STRM_TEST_S3_USER_NAME }}
          STRM_TEST_S3_ACCESS_KEY_ID: ${{ secrets.STRM_TEST_S3_ACCESS_KEY_ID }}
          STRM_TEST_S3_SECRET_ACCESS_KEY: ${{ secrets.STRM_TEST_S3_SECRET_ACCESS_KEY }}
        run: |
          go test ./test -v
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          distribution: goreleaser
          version: latest
          args: --snapshot --skip-publish --rm-dist
