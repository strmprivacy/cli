name: Release

on:
  push:
    branches:
      - "master"

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Install dependencies
        run: npm i --non-interactive --pure-lockfile
      - name: Publish Docs
        env:
          GITHUB_TOKEN: ${{secrets.GH_TOKEN}}
          APIS_USERNAME: ${{secrets.APIS_USERNAME}}
          APIS_EMAIL: ${{secrets.APIS_EMAIL}}
        run: |
          make
          git config --global user.email "${APIS_EMAIL}"
          git config --global user.name "${APIS_USERNAME}"
          tag_name="${GITHUB_REF##*/}"
          rm -rf generated_docs
          mkdir generated_docs
          ./dist/strm --generate-docs
          cd generated_docs
          find . -name "*strm_*" -exec sh -c 'mv "$1" "${1#*_}"' _ {} \;
          for i in `find . -name '*.md'`; do
          DIRNAME="${i%_*}"
          DIRNAME2="${DIRNAME%%/*}"
          FILENAME="${i##*_}"
          if [[ $DIRNAME != *md ]]
          then
            echo ${DIRNAME%%.md} | sed -r 's/_/\//g' | xargs -I {} mkdir -p {}
            echo ${DIRNAME%%.md} | sed -r 's/_/\//g' | xargs -I {} mv $i {}/$FILENAME
          else
            rm -rf ${DIRNAME}
          fi
          done          
          cd ..
          git clone "https://git:${{secrets.GH_TOKEN}}@github.com/strmprivacy/docs.git"
          cd docs
          rm -rf ./docs/cli-reference/*
          cp -rf ../generated_docs/* ./docs/cli-reference
          git add .
          git commit -m "add generated docs (${tag_name})"
          git push
      - name: Release
        env:
          GITHUB_TOKEN: ${{secrets.GH_TOKEN}}
          GIT_AUTHOR_NAME: ${{secrets.APIS_USERNAME}}
          GIT_COMMITTER_NAME: ${{secrets.APIS_USERNAME}}
          GIT_AUTHOR_EMAIL: ${{secrets.APIS_EMAIL}}
          GIT_COMMITTER_EMAIL: ${{secrets.APIS_EMAIL}}
        run: npm run semantic-release -- --repository-url "$(git config --get remote.origin.url)"
